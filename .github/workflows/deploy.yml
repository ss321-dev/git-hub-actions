name: Test_Git_Actions

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE_NAME: "test-project"
  DOCKER_IMAGE_TAG: master-${{ github.sha }}

  SLACK_SUCCESS_COLOR: "good"
  SLACK_FAILED_COLOR: "danger"
  SLACK_ICON_EMOJI: ":bell:"
  SLACK_TITLE: ":closed_book: ${{ github.repository }}"

jobs:
  ImageBuild:
    name: build docker image
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login gitHub registry
        run: docker login docker.pkg.github.com -u owner -p ${{ secrets.GITHUB_TOKEN }}
      - name: build docker image
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} ./
      - name: notify slack of failure results
        uses: rtCamp/action-slack-notify@e17352f
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ env.SLACK_FAILED_COLOR }}
          SLACK_TITLE: ${{ env.SLACK_TITLE }}
          SLACK_ICON_EMOJI: ${{ env.SLACK_ICON_EMOJI }}
          SLACK_MESSAGE: "failed to build docker image"
      - name: push image to gitHub registry
        run: docker push docker.pkg.github.com/${{ github.repository }}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}

  dockle:
    name: run dockle
    runs-on: ubuntu-18.04
    needs: ImageBuild
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login gitHub registry
        run: docker login docker.pkg.github.com -u owner -p ${{ secrets.GITHUB_TOKEN }}
      - name: pull image gitHub registry
        run: docker pull docker.pkg.github.com/${{ github.repository }}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
      - name: install dockle
        run: |
          VERSION=$(
          curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
          grep '"tag_name":' | \
          sed -E 's/.*"v([^"]+)".*/\1/' \
          ) && curl -L -o dockle.deb https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.deb
          sudo dpkg -i dockle.deb && rm dockle.deb
      - name: scan docker image
        id: dockle
        run: echo ::set-output name=result::$(dockle --exit-code 1 --exit-level fatal docker.pkg.github.com/${{ github.repository }}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG})
      - name: notify slack of results
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              username: 'action-slack',
              icon_emoji: ':octocat:',
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${{ steps.dockle.outputs.result }}`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  ImagePush:
    name: push docker image
    runs-on: ubuntu-18.04
    needs: [dockle]
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: notify slack of failure results
        uses: rtCamp/action-slack-notify@e17352f
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ env.SLACK_FAILED_COLOR }}
          SLACK_TITLE: ${{ env.SLACK_TITLE }}
          SLACK_ICON_EMOJI: ${{ env.SLACK_ICON_EMOJI }}
          SLACK_MESSAGE: "failed to push to ECR"