name: Test_Git_Actions

on:
  push:
    branches:
      - master

env:
  DOCKER_IMAGE_NAME: "test-project"
  DOCKER_IMAGE_TAG: master-${{ github.sha }}

  SLACK_ICON_EMOJI: ":bell:"
  SLACK_MESSAGE: ":closed_book: ${{ github.repository }}"

jobs:
  ImageBuild:
    name: build docker image
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login gitHub registry
        run: docker login docker.pkg.github.com -u owner -p ${{ secrets.GITHUB_TOKEN }}
      - name: build docker image
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG ./
      - name: push image to gitHub registry
        run: docker push docker.pkg.github.com/${{ github.repository }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

  dockle:
    name: dockle scan
    runs-on: ubuntu-18.04
    needs: ImageBuild
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Login GitHub Registry
        run: docker login docker.pkg.github.com -u owner -p ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image from GitHub Registry
        run: docker pull docker.pkg.github.com/${{ github.repository }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
      - name: Install dockle
        run: |
          VERSION=$(curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
          grep '"tag_name":' | \
          sed -E 's/.*"v([^"]+)".*/\1/' \
          )
          curl -L -o dockle.deb https://github.com/goodwithtech/dockle/releases/download/v${VERSION}/dockle_${VERSION}_Linux-64bit.deb
          sudo dpkg -i dockle.deb
          rm dockle.deb
      - name: Check image with dockle
        run: dockle docker.pkg.github.com/${{ github.repository }}/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
      - name: notify slack of results
        uses: rtCamp/action-slack-notify@e17352f
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: "#1475dc"
          SLACK_TITLE: "Dockle"
          SLACK_ICON_EMOJI: ${{ env.SLACK_ICON_EMOJI }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}

  ImagePush:
    name: push docker image
    runs-on: ubuntu-18.04
    needs: dockle
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: notify slack of failure results
        uses: rtCamp/action-slack-notify@e17352f
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: "danger"
          SLACK_TITLE: "failed to workflow :boom:"
          SLACK_ICON_EMOJI: ${{ env.SLACK_ICON_EMOJI }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
      - name: notify slack of succsess results
        uses: rtCamp/action-slack-notify@e17352f
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: "good"
          SLACK_TITLE: "successfully workflow"
          SLACK_ICON_EMOJI: ${{ env.SLACK_ICON_EMOJI }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}